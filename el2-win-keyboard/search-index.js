var N=null,E="",T="t",U="u",searchIndex={};
var R=["height","from_physical","to_physical","from_logical","to_logical","winit::event","device_id","winit::event::Event","winit::event::StartCause","requested_resume","WindowEvent","winit::event::WindowEvent","modifiers","DeviceEvent","MouseWheel","winit::event::DeviceEvent","keyboard","Released","AlphaNum","Navigation","Function","Modifier","IntlGrave","Labeled `~ on a US keyboard.","IntlDash","Labeled `-_` on a US keyboard.","IntlEquals","Labeled `=+` on a US keyboard.","IntlLeftBracket","Labeled `[{` on a US keyboard.","IntlRightBracket","Labeled `]}` on a US keyboard.","IntlSemicolon","Labeled `;:` on a US keyboard.","IntlApostrophe","Labeled `'\"` on a US keyboard.","IntlComma","Labeled `,<` on a US keyboard.","IntlPeriod","Labeled `.>` on a US keyboard.","IntlSlash","Labeled `/?` on a US keyboard.","IntlBackslashLeft","Labeled `\\|` on a UK keyboard. Doesn't exist on all…","IntlBackslashRright","Labeled `\\|` on a US keyboard. Doesn't exist on all…","Labeled `\\ろ` (ro) on a Japanese keyboard. Doesn't exist on…","Labeled `¥` (yen) on a Japanese keyboard and `\\/` on a…","Left thumb-shift key on Japanese keyboards.","modifierstate","When the current loop iteration finishes, suspend the…","eventloop","winit::window","winit::window::BadIcon","logicalsize","windowbuilder","monitorhandle","eventloopwindowtarget","creationerror","logicalposition","Returns the position of the top-left hand corner of the…","option","result","Sets the window icon. On Windows and X11, this is…","get_available_monitors","Returns the list of all the monitors available on the…","availablemonitorsiter","get_primary_monitor","Returns the primary monitor of the system.","string","physicalsize","get_position","physicalposition","get_hidpi_factor","Returns the DPI factor that can be used to map logical…","This sets `ICON_BIG`. A good ceiling here is 256x256.","winit::platform","Additional methods on `EventLoop` that are specific to…","UserEvent","winit::dpi","to_owned","clone_into","try_from","borrow_mut","try_into","type_id","borrow","typeid","winit::event::keyboard","winit::event_loop","to_string","winit::monitor","new_dpi_unaware","get_hwnd","set_taskbar_icon","with_parent_window","with_taskbar_icon","with_no_redirection_bitmap","native_id","hmonitor","get_persistent_identifier","run_return","key_label_into","Note that this rounds instead of truncating.","partial_cmp","keystate","ordering","physicalkey","logicalkey","deviceid","windowid","inputevent","compositionevent","keyboardevent","physicalalphanumkey","logicalalphanumkey","commandkey","functionkey","modifierkey","navigationkey","numpadkey","startcause","windowevent","deviceevent","mousebutton","mousescrolldelta","controlflow","eventloopclosed","mousecursor","mediakey","touchphase","elementstate","eventloopproxy","windowattributes","formatter","description","LogicalPosition","PhysicalPosition","LogicalSize","PhysicalSize","StartCause","TouchPhase","ElementState","MouseButton","MouseScrollDelta","InputEvent","KeyboardEvent","CompositionEvent","PhysicalKey","LogicalKey","PhysicalAlphaNumKey","LogicalAlphaNumKey","CommandKey","FunctionKey","ModifierKey","NavigationKey","NumpadKey","ModifierState","ControlFlow","EventLoop","EventLoopProxy","WindowBuilder","WindowAttributes","CreationError","MouseCursor","MonitorHandle","EventLoopExtWindows","WindowExtWindows","WindowBuilderExtWindows","MonitorHandleExtWindows","DeviceIdExtWindows","EventLoopExtDesktop","EventLoopWindowTarget","EventLoopClosed","AvailableMonitorsIter"];
searchIndex["winit"]={"doc":"Winit allows you to build a window on as many platforms as…","i":[[0,"dpi","winit","DPI is important, so read the docs for this module if you…",N,N],[3,R[136],R[79],"A position represented in logical pixels.",N,N],[12,"x",E,E,0,N],[12,"y",E,E,0,N],[3,R[137],E,"A position represented in physical pixels.",N,N],[12,"x",E,E,1,N],[12,"y",E,E,1,N],[3,R[138],E,"A size represented in logical pixels.",N,N],[12,"width",E,E,2,N],[12,R[0],E,E,2,N],[3,R[139],E,"A size represented in physical pixels.",N,N],[12,"width",E,E,3,N],[12,R[0],E,E,3,N],[5,"validate_hidpi_factor",E,"Checks that the DPI factor is a normal positive `f64`.",N,[[["f64"]],["bool"]]],[11,"new",E,E,0,[[["f64"],["f64"]],["self"]]],[11,R[1],E,E,0,[[[T],["f64"]],["self"]]],[11,R[2],E,E,0,[[["self"],["f64"]],[R[72]]]],[11,"new",E,E,1,[[["f64"],["f64"]],["self"]]],[11,R[3],E,E,1,[[[T],["f64"]],["self"]]],[11,R[4],E,E,1,[[["self"],["f64"]],[R[59]]]],[11,"new",E,E,2,[[["f64"],["f64"]],["self"]]],[11,R[1],E,E,2,[[[T],["f64"]],["self"]]],[11,R[2],E,E,2,[[["self"],["f64"]],[R[70]]]],[11,"new",E,E,3,[[["f64"],["f64"]],["self"]]],[11,R[3],E,E,3,[[[T],["f64"]],["self"]]],[11,R[4],E,E,3,[[["self"],["f64"]],[R[54]]]],[0,"event","winit","The `Event` enum and assorted supporting types.",N,N],[3,"DeviceId",R[5],"Identifier of an input device.",N,N],[3,"Touch",E,"Represents touch event",N,N],[12,R[6],E,E,4,N],[12,"phase",E,E,4,N],[12,"location",E,E,4,N],[12,"id",E,"unique identifier of a finger.",4,N],[4,"Event",E,"Describes a generic event.",N,N],[13,R[10],E,"Emitted when the OS sends an event to a winit window.",5,N],[12,"window_id",R[7],E,5,N],[12,"event",E,E,5,N],[13,R[13],R[5],"Emitted when the OS sends an event to a device.",5,N],[12,R[6],R[7],E,5,N],[12,"event",E,E,5,N],[13,R[78],R[5],"Emitted when an event is sent from…",5,N],[13,"NewEvents",E,"Emitted when new events arrive from the OS to be processed.",5,N],[13,"EventsCleared",E,"Emitted when all of the event loop's events have been…",5,N],[13,"LoopDestroyed",E,"Emitted when the event loop is being shut down. This is…",5,N],[13,"Suspended",E,"Emitted when the application has been suspended or resumed.",5,N],[4,R[140],E,"Describes the reason the event loop is resuming.",N,N],[13,"ResumeTimeReached",E,"Sent if the time specified by `ControlFlow::WaitUntil` has…",6,N],[12,"start",R[8],E,6,N],[12,R[9],E,E,6,N],[13,"WaitCancelled",R[5],"Sent if the OS has new events to send to the window, after…",6,N],[12,"start",R[8],E,6,N],[12,R[9],E,E,6,N],[13,"Poll",R[5],"Sent if the event loop is being resumed after the loop's…",6,N],[13,"Init",E,"Sent once, immediately after `run` is called. Indicates…",6,N],[4,R[10],E,"Describes an event from a `Window`.",N,N],[13,"Resized",E,"The size of the window has changed. Contains the client…",7,N],[13,"Moved",E,"The position of the window has changed. Contains the…",7,N],[13,"CloseRequested",E,"The window has been requested to close.",7,N],[13,"Destroyed",E,"The window has been destroyed.",7,N],[13,"DroppedFile",E,"A file has been dropped into the window.",7,N],[13,"HoveredFile",E,"A file is being hovered over the window.",7,N],[13,"HoveredFileCancelled",E,"A file was hovered, but has exited the window.",7,N],[13,"ReceivedCharacter",E,"The window received a unicode character.",7,N],[13,"Focused",E,"The window gained or lost focus.",7,N],[13,"KeyboardInput",E,"An event from the keyboard has been received.",7,N],[12,R[6],R[11],E,7,N],[12,"input",E,E,7,N],[13,"KeymapChanged",R[5],"The keymap has been changed, and any labels displayed to…",7,N],[13,"CursorMoved",E,"The cursor has moved on the window.",7,N],[12,R[6],R[11],E,7,N],[12,"position",E,"(x,y) coords in pixels relative to the top-left corner of…",7,N],[12,R[12],E,E,7,N],[13,"CursorEntered",R[5],"The cursor has entered the window.",7,N],[12,R[6],R[11],E,7,N],[13,"CursorLeft",R[5],"The cursor has left the window.",7,N],[12,R[6],R[11],E,7,N],[13,R[14],R[5],"A mouse wheel movement or touchpad scroll occurred.",7,N],[12,R[6],R[11],E,7,N],[12,"delta",E,E,7,N],[12,"phase",E,E,7,N],[12,R[12],E,E,7,N],[13,"MouseInput",R[5],"An mouse button press has been received.",7,N],[12,R[6],R[11],E,7,N],[12,"state",E,E,7,N],[12,"button",E,E,7,N],[12,R[12],E,E,7,N],[13,"TouchpadPressure",R[5],"Touchpad pressure event.",7,N],[12,R[6],R[11],E,7,N],[12,"pressure",E,E,7,N],[12,"stage",E,E,7,N],[13,"AxisMotion",R[5],"Motion on some analog axis. May report data redundant to…",7,N],[12,R[6],R[11],E,7,N],[12,"axis",E,E,7,N],[12,"value",E,E,7,N],[13,"RedrawRequested",R[5],"The OS or application has requested that the window be…",7,N],[13,"Touch",E,"Touch event has been received",7,N],[13,"HiDpiFactorChanged",E,"The DPI factor of the window has changed.",7,N],[4,R[13],E,"Represents raw hardware events that are not associated…",N,N],[13,"Added",E,E,8,N],[13,"Removed",E,E,8,N],[13,"MouseMotion",E,"Change in physical position of a pointing device.",8,N],[12,"delta",R[15],"(x, y) change in position in unspecified units.",8,N],[13,R[14],R[5],"Physical scroll event",8,N],[12,"delta",R[15],E,8,N],[13,"Motion",R[5],"Motion on some analog axis. This event will be reported…",8,N],[12,"axis",R[15],E,8,N],[12,"value",E,E,8,N],[13,"Button",R[5],E,8,N],[12,"button",R[15],E,8,N],[12,"state",E,E,8,N],[13,"Key",R[5],E,8,N],[13,"Text",E,E,8,N],[12,"codepoint",R[15],E,8,N],[4,R[141],R[5],"Describes touch-screen input state.",N,N],[13,"Started",E,E,9,N],[13,"Moved",E,E,9,N],[13,"Ended",E,E,9,N],[13,"Cancelled",E,E,9,N],[4,R[142],E,"Describes the input state of a key.",N,N],[13,"Pressed",E,E,10,N],[13,R[17],E,E,10,N],[4,R[143],E,"Describes a button of a mouse controller.",N,N],[13,"Left",E,E,11,N],[13,"Right",E,E,11,N],[13,"Middle",E,E,11,N],[13,"Other",E,E,11,N],[4,R[144],E,"Describes a difference in the mouse scroll wheel state.",N,N],[13,"LineDelta",E,"Amount in lines or rows to scroll in the horizontal and…",12,N],[13,"PixelDelta",E,"Amount in pixels to scroll in the horizontal and vertical…",12,N],[0,R[16],E,"Keyboard event types.",N,N],[3,R[145],R[88],"TODO: COME UP WITH REAL NAME. `InputEvent` IS VAGUE.",N,N],[12,"chara",E,E,13,N],[12,"composition",E,E,13,N],[12,R[16],E,E,13,N],[3,R[146],E,"Describes a keyboard input event.",N,N],[12,"state",E,E,14,N],[12,"key",E,E,14,N],[3,"Key",E,E,N,N],[12,"physical",E,E,15,N],[12,"logical",E,E,15,N],[3,R[157],E,"TODO: ADD SERDE SUPPORT. Just serializing this as a number…",N,N],[4,R[147],E,E,N,N],[13,"Start",E,E,16,N],[13,"Update",E,E,16,N],[13,"End",E,E,16,N],[13,"Cancel",E,E,16,N],[4,"KeyState",E,E,N,N],[13,"Pressed",E,E,17,N],[13,"Repeated",E,E,17,N],[13,R[17],E,E,17,N],[4,R[148],E,"Representation of the physical location of a key.",N,N],[13,R[18],E,E,18,N],[13,R[19],E,E,18,N],[13,"Command",E,E,18,N],[13,R[20],E,E,18,N],[13,"Numpad",E,E,18,N],[13,"Media",E,E,18,N],[13,R[21],E,E,18,N],[13,"Edit",E,E,18,N],[4,R[149],E,"Representation of the logical semantics of a key.",N,N],[13,R[18],E,E,19,N],[13,R[19],E,E,19,N],[13,"Command",E,E,19,N],[13,R[20],E,E,19,N],[13,"Numpad",E,E,19,N],[13,"Media",E,E,19,N],[13,R[21],E,E,19,N],[13,"Edit",E,E,19,N],[4,R[150],E,E,N,N],[13,"A",E,E,20,N],[13,"B",E,E,20,N],[13,"C",E,E,20,N],[13,"D",E,E,20,N],[13,"E",E,E,20,N],[13,"F",E,E,20,N],[13,"G",E,E,20,N],[13,"H",E,E,20,N],[13,"I",E,E,20,N],[13,"J",E,E,20,N],[13,"K",E,E,20,N],[13,"L",E,E,20,N],[13,"M",E,E,20,N],[13,"N",E,E,20,N],[13,"O",E,E,20,N],[13,"P",E,E,20,N],[13,"Q",E,E,20,N],[13,"R",E,E,20,N],[13,"S",E,E,20,N],[13,"T",E,E,20,N],[13,"U",E,E,20,N],[13,"V",E,E,20,N],[13,"W",E,E,20,N],[13,"X",E,E,20,N],[13,"Y",E,E,20,N],[13,"Z",E,E,20,N],[13,"Key1",E,E,20,N],[13,"Key2",E,E,20,N],[13,"Key3",E,E,20,N],[13,"Key4",E,E,20,N],[13,"Key5",E,E,20,N],[13,"Key6",E,E,20,N],[13,"Key7",E,E,20,N],[13,"Key8",E,E,20,N],[13,"Key9",E,E,20,N],[13,"Key0",E,E,20,N],[13,R[22],E,R[23],20,N],[13,R[24],E,R[25],20,N],[13,R[26],E,R[27],20,N],[13,R[28],E,R[29],20,N],[13,R[30],E,R[31],20,N],[13,R[32],E,R[33],20,N],[13,R[34],E,R[35],20,N],[13,R[36],E,R[37],20,N],[13,R[38],E,R[39],20,N],[13,R[40],E,R[41],20,N],[13,R[42],E,R[43],20,N],[13,R[44],E,R[45],20,N],[13,"IntlRo",E,R[46],20,N],[13,"IntlYen",E,R[47],20,N],[4,R[151],E,E,N,N],[13,"A",E,E,21,N],[13,"B",E,E,21,N],[13,"C",E,E,21,N],[13,"D",E,E,21,N],[13,"E",E,E,21,N],[13,"F",E,E,21,N],[13,"G",E,E,21,N],[13,"H",E,E,21,N],[13,"I",E,E,21,N],[13,"J",E,E,21,N],[13,"K",E,E,21,N],[13,"L",E,E,21,N],[13,"M",E,E,21,N],[13,"N",E,E,21,N],[13,"O",E,E,21,N],[13,"P",E,E,21,N],[13,"Q",E,E,21,N],[13,"R",E,E,21,N],[13,"S",E,E,21,N],[13,"T",E,E,21,N],[13,"U",E,E,21,N],[13,"V",E,E,21,N],[13,"W",E,E,21,N],[13,"X",E,E,21,N],[13,"Y",E,E,21,N],[13,"Z",E,E,21,N],[13,"Key1",E,E,21,N],[13,"Key2",E,E,21,N],[13,"Key3",E,E,21,N],[13,"Key4",E,E,21,N],[13,"Key5",E,E,21,N],[13,"Key6",E,E,21,N],[13,"Key7",E,E,21,N],[13,"Key8",E,E,21,N],[13,"Key9",E,E,21,N],[13,"Key0",E,E,21,N],[13,R[22],E,R[23],21,N],[13,R[24],E,R[25],21,N],[13,R[26],E,R[27],21,N],[13,R[28],E,R[29],21,N],[13,R[30],E,R[31],21,N],[13,R[32],E,R[33],21,N],[13,R[34],E,R[35],21,N],[13,R[36],E,R[37],21,N],[13,R[38],E,R[39],21,N],[13,R[40],E,R[41],21,N],[13,R[42],E,R[43],21,N],[13,R[44],E,R[45],21,N],[13,"IntlRo",E,R[46],21,N],[13,"IntlYen",E,R[47],21,N],[4,"EditKey",E,E,N,N],[13,"Space",E,E,22,N],[13,"Tab",E,E,22,N],[13,"EnterLeft",E,E,22,N],[13,"EnterRight",E,E,22,N],[13,"Backspace",E,E,22,N],[13,"Insert",E,E,22,N],[13,"Delete",E,E,22,N],[4,R[152],E,E,N,N],[13,"Escape",E,E,23,N],[13,"Menu",E,E,23,N],[13,"PrintScreen",E,E,23,N],[13,"Break",E,E,23,N],[13,"Cut",E,E,23,N],[13,"Copy",E,E,23,N],[13,"Paste",E,E,23,N],[13,"Undo",E,E,23,N],[13,"Redo",E,E,23,N],[13,"IMEMode",E,"Kana Mode on Japanese keyboards. Changes the input method.",23,N],[13,"NonConvert",E,E,23,N],[13,"Convert",E,E,23,N],[4,R[153],E,E,N,N],[13,"F1",E,E,24,N],[13,"F2",E,E,24,N],[13,"F3",E,E,24,N],[13,"F4",E,E,24,N],[13,"F5",E,E,24,N],[13,"F6",E,E,24,N],[13,"F7",E,E,24,N],[13,"F8",E,E,24,N],[13,"F9",E,E,24,N],[13,"F10",E,E,24,N],[13,"F11",E,E,24,N],[13,"F12",E,E,24,N],[13,"F13",E,E,24,N],[13,"F14",E,E,24,N],[13,"F15",E,E,24,N],[13,"F16",E,E,24,N],[13,"F17",E,E,24,N],[13,"F18",E,E,24,N],[13,"F19",E,E,24,N],[13,"F20",E,E,24,N],[13,"F21",E,E,24,N],[13,"F22",E,E,24,N],[13,"F23",E,E,24,N],[13,"F24",E,E,24,N],[4,"MediaKey",E,E,N,N],[13,"PlayPause",E,E,25,N],[13,"Pause",E,E,25,N],[13,"Play",E,E,25,N],[13,"Stop",E,E,25,N],[13,"FastForward",E,E,25,N],[13,"Rewind",E,E,25,N],[13,"Record",E,E,25,N],[13,"TrackNext",E,E,25,N],[13,"TrackPrevious",E,E,25,N],[4,R[154],E,E,N,N],[13,"ControlLeft",E,E,26,N],[13,"ControlRight",E,E,26,N],[13,"ShiftLeft",E,E,26,N],[13,"ShiftRight",E,E,26,N],[13,"AltLeft",E,E,26,N],[13,"AltRight",E,E,26,N],[13,"AltGr",E,E,26,N],[13,"MetaLeft",E,E,26,N],[13,"MetaRight",E,E,26,N],[13,"NumLock",E,E,26,N],[13,"CapsLock",E,E,26,N],[13,"ScrollLock",E,E,26,N],[4,R[155],E,E,N,N],[13,"Up",E,E,27,N],[13,"Down",E,E,27,N],[13,"Left",E,E,27,N],[13,"Right",E,E,27,N],[13,"Home",E,E,27,N],[13,"End",E,E,27,N],[13,"PageUp",E,E,27,N],[13,"PageDown",E,E,27,N],[4,R[156],E,E,N,N],[13,"Divide",E,E,28,N],[13,"Multiply",E,E,28,N],[13,"Subtract",E,E,28,N],[13,"Add",E,E,28,N],[13,"Period",E,E,28,N],[13,"Num1",E,E,28,N],[13,"Num2",E,E,28,N],[13,"Num3",E,E,28,N],[13,"Num4",E,E,28,N],[13,"Num5",E,E,28,N],[13,"Num6",E,E,28,N],[13,"Num7",E,E,28,N],[13,"Num8",E,E,28,N],[13,"Num9",E,E,28,N],[13,"Num0",E,E,28,N],[8,"KeyLabel",E,"Retrieves the given key's label in the host keymap.",N,N],[10,R[102],E,"Append the label to the end of the given string.",29,[[["self"],[R[69]]]]],[11,"key_label",E,E,29,[[["self"]],[R[69]]]],[18,"CONTROL",E,"Either control key is pressed.",30,N],[18,"CONTROL_LEFT",E,E,30,N],[18,"CONTROL_RIGHT",E,E,30,N],[18,"CONTROL_ALL",E,"Set of all `CONTROL*` flags.",30,N],[18,"SHIFT",E,"Either shift key is pressed.",30,N],[18,"SHIFT_LEFT",E,E,30,N],[18,"SHIFT_RIGHT",E,E,30,N],[18,"SHIFT_ALL",E,"Set of all `SHIFT*` flags.",30,N],[18,"ALT",E,"Either alt key is pressed.",30,N],[18,"ALT_LEFT",E,E,30,N],[18,"ALT_RIGHT",E,E,30,N],[18,"ALT_ALL",E,"Set of all `ALT*` flags, except `ALT_GR`.",30,N],[18,"ALT_GR",E,"Note that setting `ALT_GR` doesn't set `ALT.",30,N],[18,"META",E,"Either meta key is pressed.",30,N],[18,"META_LEFT",E,E,30,N],[18,"META_RIGHT",E,E,30,N],[18,"META_ALL",E,"Set of all `META*` flags.",30,N],[18,"NUM_LOCK",E,E,30,N],[18,"CAPS_LOCK",E,E,30,N],[18,"SCROLL_LOCK",E,E,30,N],[11,"empty",E,"Returns an empty set of flags.",30,[[],[R[49]]]],[11,"all",E,"Returns the set containing all flags.",30,[[],[R[49]]]],[11,"bits",E,"Returns the raw value of the flags currently stored.",30,[[["self"]],["u32"]]],[11,"from_bits",E,"Convert from underlying bit representation, unless that…",30,[[["u32"]],[R[61],[R[49]]]]],[11,"from_bits_truncate",E,"Convert from underlying bit representation, dropping any…",30,[[["u32"]],[R[49]]]],[11,"is_empty",E,"Returns `true` if no flags are currently stored.",30,[[["self"]],["bool"]]],[11,"is_all",E,"Returns `true` if all flags are currently set.",30,[[["self"]],["bool"]]],[11,"intersects",E,"Returns `true` if there are flags common to both `self`…",30,[[["self"],[R[49]]],["bool"]]],[11,"contains",E,"Returns `true` all of the flags in `other` are contained…",30,[[["self"],[R[49]]],["bool"]]],[11,"insert",E,"Inserts the specified flags in-place.",30,[[["self"],[R[49]]]]],[11,"remove",E,"Removes the specified flags in-place.",30,[[["self"],[R[49]]]]],[11,"toggle",E,"Toggles the specified flags in-place.",30,[[["self"],[R[49]]]]],[11,"set",E,"Inserts or removes the specified flags depending on the…",30,[[["self"],[R[49]],["bool"]]]],[6,"ScanCode",R[5],"Hardware-dependent keyboard scan code.",N,N],[6,"AxisId",E,"Identifier for a specific analog axis on some device.",N,N],[6,"ButtonId",E,"Identifier for a specific button on some device.",N,N],[11,"map_nonuser_event",E,E,5,[[["self"]],[R[62],["event","event"]]]],[11,"dummy",E,"Returns a dummy `DeviceId`, useful for unit testing. The…",31,[[],["self"]]],[0,"event_loop","winit","The `EventLoop` struct and assorted supporting types,…",N,N],[3,R[159],R[89],"Provides a way to retrieve events from the system and from…",N,N],[3,R[172],E,"Target that associates windows with an `EventLoop`.",N,N],[3,R[160],E,"Used to send custom events to `EventLoop`.",N,N],[3,R[173],E,"The error that is returned when an `EventLoopProxy`…",N,N],[4,R[158],E,"Set by the user callback given to the `EventLoop::run`…",N,N],[13,"Poll",E,"When the current loop iteration finishes, immediately…",32,N],[13,"Wait",E,R[50],32,N],[13,"WaitUntil",E,R[50],32,N],[13,"Exit",E,"Send a `LoopDestroyed` event and stop the event loop. This…",32,N],[11,"new",E,"Builds a new event loop with a `()` as the user event type.",33,[[],[R[51]]]],[11,"new_user_event",E,"Builds a new event loop.",33,[[],[R[51]]]],[11,R[64],E,R[65],33,[[["self"]],[R[66]]]],[11,R[67],E,R[68],33,[[["self"]],[R[56]]]],[11,"run",E,"Hijacks the calling thread and initializes the `winit`…",33,N],[11,"create_proxy",E,"Creates an `EventLoopProxy` that can be used to wake up…",33,[[["self"]],[R[132]]]],[11,"send_event",E,"Send an event to the `EventLoop` from which this proxy was…",34,[[["self"],[T]],[R[62],[R[127]]]]],[0,"window","winit","The `Window` struct and associated types.",N,N],[3,"Icon",R[52],"An icon used for the window titlebar, taskbar, etc.",N,N],[3,"Window",E,"Represents a window.",N,N],[3,"WindowId",E,"Identifier of a window. Unique for each window.",N,N],[3,R[161],E,"Object that allows you to build windows.",N,N],[12,"window",E,"The attributes to use to create the window.",35,N],[3,R[162],E,"Attributes to use when creating a window.",N,N],[12,"dimensions",E,"The dimensions of the window. If this is `None`, some…",36,N],[12,"min_dimensions",E,"The minimum dimensions a window can be, If this is `None`,…",36,N],[12,"max_dimensions",E,"The maximum dimensions a window can be, If this is `None`,…",36,N],[12,"resizable",E,"Whether the window is resizable or not.",36,N],[12,"fullscreen",E,"Whether the window should be set as fullscreen upon…",36,N],[12,"title",E,"The title of the window in the title bar.",36,N],[12,"maximized",E,"Whether the window should be maximized upon creation.",36,N],[12,"visible",E,"Whether the window should be immediately visible upon…",36,N],[12,"transparent",E,"Whether the the window should be transparent. If this is…",36,N],[12,"decorations",E,"Whether the window should have borders and bars.",36,N],[12,"always_on_top",E,"Whether the window should always be on top of other windows.",36,N],[12,"window_icon",E,"The window icon.",36,N],[12,"multitouch",E,"[iOS only] Enable multitouch, see multipleTouchEnabled",36,N],[4,"BadIcon",E,"An error produced when using `Icon::from_rgba` with…",N,N],[13,"ByteCountNotDivisibleBy4",E,"Produced when the length of the `rgba` argument isn't…",37,N],[12,"byte_count",R[53],E,37,N],[13,"DimensionsVsPixelCount",R[52],"Produced when the number of pixels (`rgba.len() / 4`)…",37,N],[12,"width",R[53],E,37,N],[12,R[0],E,E,37,N],[12,"width_x_height",E,E,37,N],[12,"pixel_count",E,E,37,N],[4,R[163],R[52],"Error that can happen while creating a window or a…",N,N],[13,"OsError",E,E,38,N],[13,"NotSupported",E,"TODO: remove this error",38,N],[4,R[164],E,"Describes the appearance of the mouse cursor.",N,N],[13,"Default",E,"The platform-dependent default cursor.",39,N],[13,"Crosshair",E,"A simple crosshair.",39,N],[13,"Hand",E,"A hand (often used to indicate links in web browsers).",39,N],[13,"Arrow",E,"Self explanatory.",39,N],[13,"Move",E,"Indicates something is to be moved.",39,N],[13,"Text",E,"Indicates text that may be selected or edited.",39,N],[13,"Wait",E,"Program busy indicator.",39,N],[13,"Help",E,"Help indicator (often rendered as a \"?\")",39,N],[13,"Progress",E,"Progress indicator. Shows that processing is being done.…",39,N],[13,"NotAllowed",E,"Cursor showing that something cannot be done.",39,N],[13,"ContextMenu",E,E,39,N],[13,"Cell",E,E,39,N],[13,"VerticalText",E,E,39,N],[13,"Alias",E,E,39,N],[13,"Copy",E,E,39,N],[13,"NoDrop",E,E,39,N],[13,"Grab",E,E,39,N],[13,"Grabbing",E,E,39,N],[13,"AllScroll",E,E,39,N],[13,"ZoomIn",E,E,39,N],[13,"ZoomOut",E,E,39,N],[13,"EResize",E,"Indicate that some edge is to be moved. For example, the…",39,N],[13,"NResize",E,E,39,N],[13,"NeResize",E,E,39,N],[13,"NwResize",E,E,39,N],[13,"SResize",E,E,39,N],[13,"SeResize",E,E,39,N],[13,"SwResize",E,E,39,N],[13,"WResize",E,E,39,N],[13,"EwResize",E,E,39,N],[13,"NsResize",E,E,39,N],[13,"NeswResize",E,E,39,N],[13,"NwseResize",E,E,39,N],[13,"ColResize",E,E,39,N],[13,"RowResize",E,E,39,N],[11,"dummy",E,"Returns a dummy `WindowId`, useful for unit testing. The…",40,[[],["self"]]],[11,"new",E,"Initializes a new `WindowBuilder` with default values.",35,[[],[R[55]]]],[11,"with_dimensions",E,"Requests the window to be of specific dimensions.",35,[[["self"],[R[54]]],[R[55]]]],[11,"with_min_dimensions",E,"Sets a minimum dimension size for the window",35,[[["self"],[R[54]]],[R[55]]]],[11,"with_max_dimensions",E,"Sets a maximum dimension size for the window",35,[[["self"],[R[54]]],[R[55]]]],[11,"with_resizable",E,"Sets whether the window is resizable or not",35,[[["self"],["bool"]],[R[55]]]],[11,"with_title",E,"Requests a specific title for the window.",35,[[["self"],[T]],[R[55]]]],[11,"with_fullscreen",E,"Sets the window fullscreen state. None means a normal…",35,[[["self"],[R[61],[R[56]]]],[R[55]]]],[11,"with_maximized",E,"Requests maximized mode.",35,[[["self"],["bool"]],[R[55]]]],[11,"with_visibility",E,"Sets whether the window will be initially hidden or visible.",35,[[["self"],["bool"]],[R[55]]]],[11,"with_transparency",E,"Sets whether the background of the window should be…",35,[[["self"],["bool"]],[R[55]]]],[11,"with_decorations",E,"Sets whether the window should have a border, a title bar,…",35,[[["self"],["bool"]],[R[55]]]],[11,"with_always_on_top",E,"Sets whether or not the window will always be on top of…",35,[[["self"],["bool"]],[R[55]]]],[11,"with_window_icon",E,R[63],35,[[["self"],[R[61],["icon"]]],[R[55]]]],[11,"with_multitouch",E,"Enables multitouch.",35,[[["self"]],[R[55]]]],[11,"build",E,"Builds the window.",35,[[["self"],[R[57]]],[R[62],["window",R[58]]]]],[11,"new",E,"Creates a new Window for platforms where this is…",41,[[[R[57]]],[R[62],["window",R[58]]]]],[11,"set_title",E,"Modifies the title of the window.",41,[[["self"],["str"]]]],[11,"show",E,"Shows the window if it was hidden.",41,[[["self"]]]],[11,"hide",E,"Hides the window if it was visible.",41,[[["self"]]]],[11,"request_redraw",E,"Emits a `WindowEvent::RedrawRequested` event in the…",41,[[["self"]]]],[11,R[71],E,R[60],41,[[["self"]],[R[61],[R[59]]]]],[11,"get_inner_position",E,R[60],41,[[["self"]],[R[61],[R[59]]]]],[11,"set_position",E,"Modifies the position of the window.",41,[[["self"],[R[59]]]]],[11,"get_inner_size",E,"Returns the logical size of the window's client area.",41,[[["self"]],[R[61],[R[54]]]]],[11,"get_outer_size",E,"Returns the logical size of the entire window.",41,[[["self"]],[R[61],[R[54]]]]],[11,"set_inner_size",E,"Modifies the inner size of the window.",41,[[["self"],[R[54]]]]],[11,"set_min_dimensions",E,"Sets a minimum dimension size for the window.",41,[[["self"],[R[61],[R[54]]]]]],[11,"set_max_dimensions",E,"Sets a maximum dimension size for the window.",41,[[["self"],[R[61],[R[54]]]]]],[11,"set_resizable",E,"Sets whether the window is resizable or not.",41,[[["self"],["bool"]]]],[11,R[73],E,R[74],41,[[["self"]],["f64"]]],[11,"set_cursor",E,"Modifies the mouse cursor of the window. Has no effect on…",41,[[["self"],[R[128]]]]],[11,"set_cursor_position",E,"Changes the position of the cursor in window coordinates.",41,[[["self"],[R[59]]],[R[62],[R[69]]]]],[11,"grab_cursor",E,"Grabs the cursor, preventing it from leaving the window.",41,[[["self"],["bool"]],[R[62],[R[69]]]]],[11,"hide_cursor",E,"Hides the cursor, making it invisible but still usable.",41,[[["self"],["bool"]]]],[11,"set_maximized",E,"Sets the window to maximized or back",41,[[["self"],["bool"]]]],[11,"set_fullscreen",E,"Sets the window to fullscreen or back",41,[[["self"],[R[61],[R[56]]]]]],[11,"set_decorations",E,"Turn window decorations on or off.",41,[[["self"],["bool"]]]],[11,"set_always_on_top",E,"Change whether or not the window will always be on top of…",41,[[["self"],["bool"]]]],[11,"set_window_icon",E,R[63],41,[[["self"],[R[61],["icon"]]]]],[11,"set_ime_spot",E,"Sets location of IME candidate box in client area…",41,[[["self"],[R[59]]]]],[11,"get_current_monitor",E,"Returns the monitor on which the window currently resides",41,[[["self"]],[R[56]]]],[11,R[64],E,R[65],41,[[["self"]],[R[66]]]],[11,R[67],E,R[68],41,[[["self"]],[R[56]]]],[11,"id",E,"Returns an identifier unique to the window.",41,[[["self"]],[R[110]]]],[0,"monitor","winit","Types useful for interacting with a user's monitors.",N,N],[3,R[174],R[91],"An iterator over all available monitors.",N,N],[3,R[165],E,"Handle to a monitor.",N,N],[11,"get_name",E,"Returns a human-readable name of the monitor.",42,[[["self"]],[R[61],[R[69]]]]],[11,"get_dimensions",E,"Returns the monitor's resolution.",42,[[["self"]],[R[70]]]],[11,R[71],E,"Returns the top-left corner position of the monitor…",42,[[["self"]],[R[72]]]],[11,R[73],E,R[74],42,[[["self"]],["f64"]]],[0,"platform","winit","Contains traits with platform-specific methods in them.",N,N],[0,"windows",R[76],E,N,N],[8,R[166],"winit::platform::windows",R[77],N,N],[10,R[92],E,"By default, winit on Windows will attempt to enable…",43,[[],["self"]]],[8,R[167],E,"Additional methods on `Window` that are specific to Windows.",N,N],[10,R[93],E,"Returns the native handle that is used by this window.",44,N],[10,R[94],E,R[75],44,[[["self"],[R[61],["icon"]]]]],[8,R[168],E,"Additional methods on `WindowBuilder` that are specific to…",N,N],[10,R[95],E,"Sets a parent to the window to be created.",45,[[["self"],["hwnd"]],[R[55]]]],[10,R[96],E,R[75],45,[[["self"],[R[61],["icon"]]],[R[55]]]],[10,R[97],E,"This sets `WS_EX_NOREDIRECTIONBITMAP`.",45,[[["self"],["bool"]],[R[55]]]],[8,R[169],E,"Additional methods on `MonitorHandle` that are specific to…",N,N],[10,R[98],E,"Returns the name of the monitor adapter specific to the…",46,[[["self"]],[R[69]]]],[10,R[99],E,"Returns the handle of the monitor - `HMONITOR`.",46,N],[8,R[170],E,"Additional methods on `DeviceId` that are specific to…",N,N],[10,R[100],E,"Returns an identifier that persistently refers to this…",47,[[["self"]],[R[61],[R[69]]]]],[0,"desktop",R[76],E,N,N],[8,R[171],"winit::platform::desktop",R[77],N,N],[16,R[78],E,"A type provided by the user that can be passed through…",48,N],[10,R[101],E,"Initializes the `winit` event loop.",48,[[["self"],["f"]]]],[11,"into",R[79],E,0,[[["self"]],[U]]],[11,R[80],E,E,0,[[["self"]],[T]]],[11,R[81],E,E,0,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[82],E,E,0,[[[U]],[R[62]]]],[11,R[86],E,E,0,[[["self"]],[T]]],[11,R[85],E,E,0,[[["self"]],[R[87]]]],[11,R[83],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"]],[R[62]]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[80],E,E,1,[[["self"]],[T]]],[11,R[81],E,E,1,N],[11,"from",E,E,1,[[[T]],[T]]],[11,R[82],E,E,1,[[[U]],[R[62]]]],[11,R[86],E,E,1,[[["self"]],[T]]],[11,R[85],E,E,1,[[["self"]],[R[87]]]],[11,R[83],E,E,1,[[["self"]],[T]]],[11,R[84],E,E,1,[[["self"]],[R[62]]]],[11,"into",E,E,2,[[["self"]],[U]]],[11,R[80],E,E,2,[[["self"]],[T]]],[11,R[81],E,E,2,N],[11,"from",E,E,2,[[[T]],[T]]],[11,R[82],E,E,2,[[[U]],[R[62]]]],[11,R[86],E,E,2,[[["self"]],[T]]],[11,R[85],E,E,2,[[["self"]],[R[87]]]],[11,R[83],E,E,2,[[["self"]],[T]]],[11,R[84],E,E,2,[[["self"]],[R[62]]]],[11,"into",E,E,3,[[["self"]],[U]]],[11,R[80],E,E,3,[[["self"]],[T]]],[11,R[81],E,E,3,N],[11,"from",E,E,3,[[[T]],[T]]],[11,R[82],E,E,3,[[[U]],[R[62]]]],[11,R[86],E,E,3,[[["self"]],[T]]],[11,R[85],E,E,3,[[["self"]],[R[87]]]],[11,R[83],E,E,3,[[["self"]],[T]]],[11,R[84],E,E,3,[[["self"]],[R[62]]]],[11,"into",R[5],E,31,[[["self"]],[U]]],[11,R[80],E,E,31,[[["self"]],[T]]],[11,R[81],E,E,31,N],[11,"from",E,E,31,[[[T]],[T]]],[11,R[82],E,E,31,[[[U]],[R[62]]]],[11,R[86],E,E,31,[[["self"]],[T]]],[11,R[85],E,E,31,[[["self"]],[R[87]]]],[11,R[83],E,E,31,[[["self"]],[T]]],[11,R[84],E,E,31,[[["self"]],[R[62]]]],[11,"into",E,E,4,[[["self"]],[U]]],[11,R[80],E,E,4,[[["self"]],[T]]],[11,R[81],E,E,4,N],[11,"from",E,E,4,[[[T]],[T]]],[11,R[82],E,E,4,[[[U]],[R[62]]]],[11,R[86],E,E,4,[[["self"]],[T]]],[11,R[85],E,E,4,[[["self"]],[R[87]]]],[11,R[83],E,E,4,[[["self"]],[T]]],[11,R[84],E,E,4,[[["self"]],[R[62]]]],[11,"into",E,E,5,[[["self"]],[U]]],[11,R[80],E,E,5,[[["self"]],[T]]],[11,R[81],E,E,5,N],[11,"from",E,E,5,[[[T]],[T]]],[11,R[82],E,E,5,[[[U]],[R[62]]]],[11,R[86],E,E,5,[[["self"]],[T]]],[11,R[85],E,E,5,[[["self"]],[R[87]]]],[11,R[83],E,E,5,[[["self"]],[T]]],[11,R[84],E,E,5,[[["self"]],[R[62]]]],[11,"into",E,E,6,[[["self"]],[U]]],[11,R[80],E,E,6,[[["self"]],[T]]],[11,R[81],E,E,6,N],[11,"from",E,E,6,[[[T]],[T]]],[11,R[82],E,E,6,[[[U]],[R[62]]]],[11,R[86],E,E,6,[[["self"]],[T]]],[11,R[85],E,E,6,[[["self"]],[R[87]]]],[11,R[83],E,E,6,[[["self"]],[T]]],[11,R[84],E,E,6,[[["self"]],[R[62]]]],[11,"into",E,E,7,[[["self"]],[U]]],[11,R[80],E,E,7,[[["self"]],[T]]],[11,R[81],E,E,7,N],[11,"from",E,E,7,[[[T]],[T]]],[11,R[82],E,E,7,[[[U]],[R[62]]]],[11,R[86],E,E,7,[[["self"]],[T]]],[11,R[85],E,E,7,[[["self"]],[R[87]]]],[11,R[83],E,E,7,[[["self"]],[T]]],[11,R[84],E,E,7,[[["self"]],[R[62]]]],[11,"into",E,E,8,[[["self"]],[U]]],[11,R[80],E,E,8,[[["self"]],[T]]],[11,R[81],E,E,8,N],[11,"from",E,E,8,[[[T]],[T]]],[11,R[82],E,E,8,[[[U]],[R[62]]]],[11,R[86],E,E,8,[[["self"]],[T]]],[11,R[85],E,E,8,[[["self"]],[R[87]]]],[11,R[83],E,E,8,[[["self"]],[T]]],[11,R[84],E,E,8,[[["self"]],[R[62]]]],[11,"into",E,E,9,[[["self"]],[U]]],[11,R[80],E,E,9,[[["self"]],[T]]],[11,R[81],E,E,9,N],[11,"from",E,E,9,[[[T]],[T]]],[11,R[82],E,E,9,[[[U]],[R[62]]]],[11,R[86],E,E,9,[[["self"]],[T]]],[11,R[85],E,E,9,[[["self"]],[R[87]]]],[11,R[83],E,E,9,[[["self"]],[T]]],[11,R[84],E,E,9,[[["self"]],[R[62]]]],[11,"into",E,E,10,[[["self"]],[U]]],[11,R[80],E,E,10,[[["self"]],[T]]],[11,R[81],E,E,10,N],[11,"from",E,E,10,[[[T]],[T]]],[11,R[82],E,E,10,[[[U]],[R[62]]]],[11,R[86],E,E,10,[[["self"]],[T]]],[11,R[85],E,E,10,[[["self"]],[R[87]]]],[11,R[83],E,E,10,[[["self"]],[T]]],[11,R[84],E,E,10,[[["self"]],[R[62]]]],[11,"into",E,E,11,[[["self"]],[U]]],[11,R[80],E,E,11,[[["self"]],[T]]],[11,R[81],E,E,11,N],[11,"from",E,E,11,[[[T]],[T]]],[11,R[82],E,E,11,[[[U]],[R[62]]]],[11,R[86],E,E,11,[[["self"]],[T]]],[11,R[85],E,E,11,[[["self"]],[R[87]]]],[11,R[83],E,E,11,[[["self"]],[T]]],[11,R[84],E,E,11,[[["self"]],[R[62]]]],[11,"into",E,E,12,[[["self"]],[U]]],[11,R[80],E,E,12,[[["self"]],[T]]],[11,R[81],E,E,12,N],[11,"from",E,E,12,[[[T]],[T]]],[11,R[82],E,E,12,[[[U]],[R[62]]]],[11,R[86],E,E,12,[[["self"]],[T]]],[11,R[85],E,E,12,[[["self"]],[R[87]]]],[11,R[83],E,E,12,[[["self"]],[T]]],[11,R[84],E,E,12,[[["self"]],[R[62]]]],[11,"into",R[88],E,13,[[["self"]],[U]]],[11,R[80],E,E,13,[[["self"]],[T]]],[11,R[81],E,E,13,N],[11,"from",E,E,13,[[[T]],[T]]],[11,R[82],E,E,13,[[[U]],[R[62]]]],[11,R[86],E,E,13,[[["self"]],[T]]],[11,R[85],E,E,13,[[["self"]],[R[87]]]],[11,R[83],E,E,13,[[["self"]],[T]]],[11,R[84],E,E,13,[[["self"]],[R[62]]]],[11,"into",E,E,14,[[["self"]],[U]]],[11,R[80],E,E,14,[[["self"]],[T]]],[11,R[81],E,E,14,N],[11,"from",E,E,14,[[[T]],[T]]],[11,R[82],E,E,14,[[[U]],[R[62]]]],[11,R[86],E,E,14,[[["self"]],[T]]],[11,R[85],E,E,14,[[["self"]],[R[87]]]],[11,R[83],E,E,14,[[["self"]],[T]]],[11,R[84],E,E,14,[[["self"]],[R[62]]]],[11,"into",E,E,15,[[["self"]],[U]]],[11,R[80],E,E,15,[[["self"]],[T]]],[11,R[81],E,E,15,N],[11,"from",E,E,15,[[[T]],[T]]],[11,R[82],E,E,15,[[[U]],[R[62]]]],[11,R[86],E,E,15,[[["self"]],[T]]],[11,R[85],E,E,15,[[["self"]],[R[87]]]],[11,R[83],E,E,15,[[["self"]],[T]]],[11,R[84],E,E,15,[[["self"]],[R[62]]]],[11,"into",E,E,30,[[["self"]],[U]]],[11,R[80],E,E,30,[[["self"]],[T]]],[11,R[81],E,E,30,N],[11,"from",E,E,30,[[[T]],[T]]],[11,R[82],E,E,30,[[[U]],[R[62]]]],[11,R[86],E,E,30,[[["self"]],[T]]],[11,R[85],E,E,30,[[["self"]],[R[87]]]],[11,R[83],E,E,30,[[["self"]],[T]]],[11,R[84],E,E,30,[[["self"]],[R[62]]]],[11,"into",E,E,16,[[["self"]],[U]]],[11,R[80],E,E,16,[[["self"]],[T]]],[11,R[81],E,E,16,N],[11,"from",E,E,16,[[[T]],[T]]],[11,R[82],E,E,16,[[[U]],[R[62]]]],[11,R[86],E,E,16,[[["self"]],[T]]],[11,R[85],E,E,16,[[["self"]],[R[87]]]],[11,R[83],E,E,16,[[["self"]],[T]]],[11,R[84],E,E,16,[[["self"]],[R[62]]]],[11,"into",E,E,17,[[["self"]],[U]]],[11,R[80],E,E,17,[[["self"]],[T]]],[11,R[81],E,E,17,N],[11,"from",E,E,17,[[[T]],[T]]],[11,R[82],E,E,17,[[[U]],[R[62]]]],[11,R[86],E,E,17,[[["self"]],[T]]],[11,R[85],E,E,17,[[["self"]],[R[87]]]],[11,R[83],E,E,17,[[["self"]],[T]]],[11,R[84],E,E,17,[[["self"]],[R[62]]]],[11,"into",E,E,18,[[["self"]],[U]]],[11,R[80],E,E,18,[[["self"]],[T]]],[11,R[81],E,E,18,N],[11,"from",E,E,18,[[[T]],[T]]],[11,R[82],E,E,18,[[[U]],[R[62]]]],[11,R[86],E,E,18,[[["self"]],[T]]],[11,R[85],E,E,18,[[["self"]],[R[87]]]],[11,R[83],E,E,18,[[["self"]],[T]]],[11,R[84],E,E,18,[[["self"]],[R[62]]]],[11,"into",E,E,19,[[["self"]],[U]]],[11,R[80],E,E,19,[[["self"]],[T]]],[11,R[81],E,E,19,N],[11,"from",E,E,19,[[[T]],[T]]],[11,R[82],E,E,19,[[[U]],[R[62]]]],[11,R[86],E,E,19,[[["self"]],[T]]],[11,R[85],E,E,19,[[["self"]],[R[87]]]],[11,R[83],E,E,19,[[["self"]],[T]]],[11,R[84],E,E,19,[[["self"]],[R[62]]]],[11,"into",E,E,20,[[["self"]],[U]]],[11,R[80],E,E,20,[[["self"]],[T]]],[11,R[81],E,E,20,N],[11,"from",E,E,20,[[[T]],[T]]],[11,R[82],E,E,20,[[[U]],[R[62]]]],[11,R[86],E,E,20,[[["self"]],[T]]],[11,R[85],E,E,20,[[["self"]],[R[87]]]],[11,R[83],E,E,20,[[["self"]],[T]]],[11,R[84],E,E,20,[[["self"]],[R[62]]]],[11,"into",E,E,21,[[["self"]],[U]]],[11,R[80],E,E,21,[[["self"]],[T]]],[11,R[81],E,E,21,N],[11,"from",E,E,21,[[[T]],[T]]],[11,R[82],E,E,21,[[[U]],[R[62]]]],[11,R[86],E,E,21,[[["self"]],[T]]],[11,R[85],E,E,21,[[["self"]],[R[87]]]],[11,R[83],E,E,21,[[["self"]],[T]]],[11,R[84],E,E,21,[[["self"]],[R[62]]]],[11,"into",E,E,22,[[["self"]],[U]]],[11,R[80],E,E,22,[[["self"]],[T]]],[11,R[81],E,E,22,N],[11,"from",E,E,22,[[[T]],[T]]],[11,R[82],E,E,22,[[[U]],[R[62]]]],[11,R[86],E,E,22,[[["self"]],[T]]],[11,R[85],E,E,22,[[["self"]],[R[87]]]],[11,R[83],E,E,22,[[["self"]],[T]]],[11,R[84],E,E,22,[[["self"]],[R[62]]]],[11,"into",E,E,23,[[["self"]],[U]]],[11,R[80],E,E,23,[[["self"]],[T]]],[11,R[81],E,E,23,N],[11,"from",E,E,23,[[[T]],[T]]],[11,R[82],E,E,23,[[[U]],[R[62]]]],[11,R[86],E,E,23,[[["self"]],[T]]],[11,R[85],E,E,23,[[["self"]],[R[87]]]],[11,R[83],E,E,23,[[["self"]],[T]]],[11,R[84],E,E,23,[[["self"]],[R[62]]]],[11,"into",E,E,24,[[["self"]],[U]]],[11,R[80],E,E,24,[[["self"]],[T]]],[11,R[81],E,E,24,N],[11,"from",E,E,24,[[[T]],[T]]],[11,R[82],E,E,24,[[[U]],[R[62]]]],[11,R[86],E,E,24,[[["self"]],[T]]],[11,R[85],E,E,24,[[["self"]],[R[87]]]],[11,R[83],E,E,24,[[["self"]],[T]]],[11,R[84],E,E,24,[[["self"]],[R[62]]]],[11,"into",E,E,25,[[["self"]],[U]]],[11,R[80],E,E,25,[[["self"]],[T]]],[11,R[81],E,E,25,N],[11,"from",E,E,25,[[[T]],[T]]],[11,R[82],E,E,25,[[[U]],[R[62]]]],[11,R[86],E,E,25,[[["self"]],[T]]],[11,R[85],E,E,25,[[["self"]],[R[87]]]],[11,R[83],E,E,25,[[["self"]],[T]]],[11,R[84],E,E,25,[[["self"]],[R[62]]]],[11,"into",E,E,26,[[["self"]],[U]]],[11,R[80],E,E,26,[[["self"]],[T]]],[11,R[81],E,E,26,N],[11,"from",E,E,26,[[[T]],[T]]],[11,R[82],E,E,26,[[[U]],[R[62]]]],[11,R[86],E,E,26,[[["self"]],[T]]],[11,R[85],E,E,26,[[["self"]],[R[87]]]],[11,R[83],E,E,26,[[["self"]],[T]]],[11,R[84],E,E,26,[[["self"]],[R[62]]]],[11,"into",E,E,27,[[["self"]],[U]]],[11,R[80],E,E,27,[[["self"]],[T]]],[11,R[81],E,E,27,N],[11,"from",E,E,27,[[[T]],[T]]],[11,R[82],E,E,27,[[[U]],[R[62]]]],[11,R[86],E,E,27,[[["self"]],[T]]],[11,R[85],E,E,27,[[["self"]],[R[87]]]],[11,R[83],E,E,27,[[["self"]],[T]]],[11,R[84],E,E,27,[[["self"]],[R[62]]]],[11,"into",E,E,28,[[["self"]],[U]]],[11,R[80],E,E,28,[[["self"]],[T]]],[11,R[81],E,E,28,N],[11,"from",E,E,28,[[[T]],[T]]],[11,R[82],E,E,28,[[[U]],[R[62]]]],[11,R[86],E,E,28,[[["self"]],[T]]],[11,R[85],E,E,28,[[["self"]],[R[87]]]],[11,R[83],E,E,28,[[["self"]],[T]]],[11,R[84],E,E,28,[[["self"]],[R[62]]]],[11,"into",R[89],E,33,[[["self"]],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[82],E,E,33,[[[U]],[R[62]]]],[11,R[86],E,E,33,[[["self"]],[T]]],[11,R[85],E,E,33,[[["self"]],[R[87]]]],[11,R[83],E,E,33,[[["self"]],[T]]],[11,R[84],E,E,33,[[["self"]],[R[62]]]],[11,"into",E,E,49,[[["self"]],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[82],E,E,49,[[[U]],[R[62]]]],[11,R[86],E,E,49,[[["self"]],[T]]],[11,R[85],E,E,49,[[["self"]],[R[87]]]],[11,R[83],E,E,49,[[["self"]],[T]]],[11,R[84],E,E,49,[[["self"]],[R[62]]]],[11,"into",E,E,34,[[["self"]],[U]]],[11,R[80],E,E,34,[[["self"]],[T]]],[11,R[81],E,E,34,N],[11,"from",E,E,34,[[[T]],[T]]],[11,R[82],E,E,34,[[[U]],[R[62]]]],[11,R[86],E,E,34,[[["self"]],[T]]],[11,R[85],E,E,34,[[["self"]],[R[87]]]],[11,R[83],E,E,34,[[["self"]],[T]]],[11,R[84],E,E,34,[[["self"]],[R[62]]]],[11,"into",E,E,50,[[["self"]],[U]]],[11,R[80],E,E,50,[[["self"]],[T]]],[11,R[81],E,E,50,N],[11,R[90],E,E,50,[[["self"]],[R[69]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[82],E,E,50,[[[U]],[R[62]]]],[11,R[86],E,E,50,[[["self"]],[T]]],[11,R[85],E,E,50,[[["self"]],[R[87]]]],[11,R[83],E,E,50,[[["self"]],[T]]],[11,R[84],E,E,50,[[["self"]],[R[62]]]],[11,"into",E,E,32,[[["self"]],[U]]],[11,R[80],E,E,32,[[["self"]],[T]]],[11,R[81],E,E,32,N],[11,"from",E,E,32,[[[T]],[T]]],[11,R[82],E,E,32,[[[U]],[R[62]]]],[11,R[86],E,E,32,[[["self"]],[T]]],[11,R[85],E,E,32,[[["self"]],[R[87]]]],[11,R[83],E,E,32,[[["self"]],[T]]],[11,R[84],E,E,32,[[["self"]],[R[62]]]],[11,"into",R[52],E,51,[[["self"]],[U]]],[11,R[80],E,E,51,[[["self"]],[T]]],[11,R[81],E,E,51,N],[11,"from",E,E,51,[[[T]],[T]]],[11,R[82],E,E,51,[[[U]],[R[62]]]],[11,R[86],E,E,51,[[["self"]],[T]]],[11,R[85],E,E,51,[[["self"]],[R[87]]]],[11,R[83],E,E,51,[[["self"]],[T]]],[11,R[84],E,E,51,[[["self"]],[R[62]]]],[11,"into",E,E,37,[[["self"]],[U]]],[11,R[80],E,E,37,[[["self"]],[T]]],[11,R[81],E,E,37,N],[11,R[90],E,E,37,[[["self"]],[R[69]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[82],E,E,37,[[[U]],[R[62]]]],[11,R[86],E,E,37,[[["self"]],[T]]],[11,R[85],E,E,37,[[["self"]],[R[87]]]],[11,R[83],E,E,37,[[["self"]],[T]]],[11,R[84],E,E,37,[[["self"]],[R[62]]]],[11,"into",E,E,41,[[["self"]],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[82],E,E,41,[[[U]],[R[62]]]],[11,R[86],E,E,41,[[["self"]],[T]]],[11,R[85],E,E,41,[[["self"]],[R[87]]]],[11,R[83],E,E,41,[[["self"]],[T]]],[11,R[84],E,E,41,[[["self"]],[R[62]]]],[11,"into",E,E,40,[[["self"]],[U]]],[11,R[80],E,E,40,[[["self"]],[T]]],[11,R[81],E,E,40,N],[11,"from",E,E,40,[[[T]],[T]]],[11,R[82],E,E,40,[[[U]],[R[62]]]],[11,R[86],E,E,40,[[["self"]],[T]]],[11,R[85],E,E,40,[[["self"]],[R[87]]]],[11,R[83],E,E,40,[[["self"]],[T]]],[11,R[84],E,E,40,[[["self"]],[R[62]]]],[11,"into",E,E,35,[[["self"]],[U]]],[11,R[80],E,E,35,[[["self"]],[T]]],[11,R[81],E,E,35,N],[11,"from",E,E,35,[[[T]],[T]]],[11,R[82],E,E,35,[[[U]],[R[62]]]],[11,R[86],E,E,35,[[["self"]],[T]]],[11,R[85],E,E,35,[[["self"]],[R[87]]]],[11,R[83],E,E,35,[[["self"]],[T]]],[11,R[84],E,E,35,[[["self"]],[R[62]]]],[11,"into",E,E,36,[[["self"]],[U]]],[11,R[80],E,E,36,[[["self"]],[T]]],[11,R[81],E,E,36,N],[11,"from",E,E,36,[[[T]],[T]]],[11,R[82],E,E,36,[[[U]],[R[62]]]],[11,R[86],E,E,36,[[["self"]],[T]]],[11,R[85],E,E,36,[[["self"]],[R[87]]]],[11,R[83],E,E,36,[[["self"]],[T]]],[11,R[84],E,E,36,[[["self"]],[R[62]]]],[11,"into",E,E,38,[[["self"]],[U]]],[11,R[80],E,E,38,[[["self"]],[T]]],[11,R[81],E,E,38,N],[11,R[90],E,E,38,[[["self"]],[R[69]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[82],E,E,38,[[[U]],[R[62]]]],[11,R[86],E,E,38,[[["self"]],[T]]],[11,R[85],E,E,38,[[["self"]],[R[87]]]],[11,R[83],E,E,38,[[["self"]],[T]]],[11,R[84],E,E,38,[[["self"]],[R[62]]]],[11,"into",E,E,39,[[["self"]],[U]]],[11,R[80],E,E,39,[[["self"]],[T]]],[11,R[81],E,E,39,N],[11,"from",E,E,39,[[[T]],[T]]],[11,R[82],E,E,39,[[[U]],[R[62]]]],[11,R[86],E,E,39,[[["self"]],[T]]],[11,R[85],E,E,39,[[["self"]],[R[87]]]],[11,R[83],E,E,39,[[["self"]],[T]]],[11,R[84],E,E,39,[[["self"]],[R[62]]]],[11,"into",R[91],E,52,[[["self"]],[U]]],[11,"into_iter",E,E,52,[[["self"]],["i"]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[82],E,E,52,[[[U]],[R[62]]]],[11,R[86],E,E,52,[[["self"]],[T]]],[11,R[85],E,E,52,[[["self"]],[R[87]]]],[11,R[83],E,E,52,[[["self"]],[T]]],[11,R[84],E,E,52,[[["self"]],[R[62]]]],[11,"into",E,E,42,[[["self"]],[U]]],[11,R[80],E,E,42,[[["self"]],[T]]],[11,R[81],E,E,42,N],[11,"from",E,E,42,[[[T]],[T]]],[11,R[82],E,E,42,[[[U]],[R[62]]]],[11,R[86],E,E,42,[[["self"]],[T]]],[11,R[85],E,E,42,[[["self"]],[R[87]]]],[11,R[83],E,E,42,[[["self"]],[T]]],[11,R[84],E,E,42,[[["self"]],[R[62]]]],[11,R[92],R[89],E,33,[[],["self"]]],[11,R[93],R[52],E,41,N],[11,R[94],E,E,41,[[["self"],[R[61],["icon"]]]]],[11,R[95],E,E,35,[[["self"],["hwnd"]],[R[55]]]],[11,R[96],E,E,35,[[["self"],[R[61],["icon"]]],[R[55]]]],[11,R[97],E,E,35,[[["self"],["bool"]],[R[55]]]],[11,R[98],R[91],E,42,[[["self"]],[R[69]]]],[11,R[99],E,E,42,N],[11,R[100],R[5],E,31,[[["self"]],[R[61],[R[69]]]]],[11,R[101],R[89],E,33,[[["self"],["f"]]]],[11,R[102],R[88],E,18,[[["self"],[R[69]]]]],[11,R[102],E,E,19,[[["self"],[R[69]]]]],[11,R[102],E,E,20,[[["self"],[R[69]]]]],[11,R[102],E,E,21,[[["self"],[R[69]]]]],[11,R[102],E,E,22,[[["self"],[R[69]]]]],[11,R[102],E,E,23,[[["self"],[R[69]]]]],[11,R[102],E,E,24,[[["self"],[R[69]]]]],[11,R[102],E,E,25,[[["self"],[R[69]]]]],[11,R[102],E,E,26,[[["self"],[R[69]]]]],[11,R[102],E,E,27,[[["self"],[R[69]]]]],[11,R[102],E,E,28,[[["self"],[R[69]]]]],[11,"into",R[79],E,0,N],[11,"into",E,R[103],0,N],[11,"into",E,E,1,N],[11,"into",E,R[103],1,N],[11,"into",E,E,2,N],[11,"into",E,R[103],2,N],[11,"into",E,E,3,N],[11,"into",E,R[103],3,N],[11,"extend",R[88],E,30,[[["self"],[T]]]],[11,R[104],E,E,15,[[["self"],["key"]],[R[61],[R[106]]]]],[11,"lt",E,E,15,[[["self"],["key"]],["bool"]]],[11,"le",E,E,15,[[["self"],["key"]],["bool"]]],[11,"gt",E,E,15,[[["self"],["key"]],["bool"]]],[11,"ge",E,E,15,[[["self"],["key"]],["bool"]]],[11,R[104],E,E,17,[[["self"],[R[105]]],[R[61],[R[106]]]]],[11,"lt",E,E,17,[[["self"],[R[105]]],["bool"]]],[11,"le",E,E,17,[[["self"],[R[105]]],["bool"]]],[11,"gt",E,E,17,[[["self"],[R[105]]],["bool"]]],[11,"ge",E,E,17,[[["self"],[R[105]]],["bool"]]],[11,R[104],E,E,18,[[["self"],[R[107]]],[R[61],[R[106]]]]],[11,"lt",E,E,18,[[["self"],[R[107]]],["bool"]]],[11,"le",E,E,18,[[["self"],[R[107]]],["bool"]]],[11,"gt",E,E,18,[[["self"],[R[107]]],["bool"]]],[11,"ge",E,E,18,[[["self"],[R[107]]],["bool"]]],[11,R[104],E,E,19,[[["self"],[R[108]]],[R[61],[R[106]]]]],[11,"lt",E,E,19,[[["self"],[R[108]]],["bool"]]],[11,"le",E,E,19,[[["self"],[R[108]]],["bool"]]],[11,"gt",E,E,19,[[["self"],[R[108]]],["bool"]]],[11,"ge",E,E,19,[[["self"],[R[108]]],["bool"]]],[11,R[104],E,E,20,[[["self"],[R[114]]],[R[61],[R[106]]]]],[11,R[104],E,E,21,[[["self"],[R[115]]],[R[61],[R[106]]]]],[11,R[104],E,E,22,[[["self"],["editkey"]],[R[61],[R[106]]]]],[11,R[104],E,E,23,[[["self"],[R[116]]],[R[61],[R[106]]]]],[11,R[104],E,E,24,[[["self"],[R[117]]],[R[61],[R[106]]]]],[11,R[104],E,E,25,[[["self"],[R[129]]],[R[61],[R[106]]]]],[11,R[104],E,E,26,[[["self"],[R[118]]],[R[61],[R[106]]]]],[11,R[104],E,E,30,[[["self"],[R[49]]],[R[61],[R[106]]]]],[11,"lt",E,E,30,[[["self"],[R[49]]],["bool"]]],[11,"le",E,E,30,[[["self"],[R[49]]],["bool"]]],[11,"gt",E,E,30,[[["self"],[R[49]]],["bool"]]],[11,"ge",E,E,30,[[["self"],[R[49]]],["bool"]]],[11,R[104],E,E,27,[[["self"],[R[119]]],[R[61],[R[106]]]]],[11,R[104],E,E,28,[[["self"],[R[120]]],[R[61],[R[106]]]]],[11,R[104],R[5],E,31,[[["self"],[R[109]]],[R[61],[R[106]]]]],[11,"lt",E,E,31,[[["self"],[R[109]]],["bool"]]],[11,"le",E,E,31,[[["self"],[R[109]]],["bool"]]],[11,"gt",E,E,31,[[["self"],[R[109]]],["bool"]]],[11,"ge",E,E,31,[[["self"],[R[109]]],["bool"]]],[11,R[104],R[52],E,40,[[["self"],[R[110]]],[R[61],[R[106]]]]],[11,"lt",E,E,40,[[["self"],[R[110]]],["bool"]]],[11,"le",E,E,40,[[["self"],[R[110]]],["bool"]]],[11,"gt",E,E,40,[[["self"],[R[110]]],["bool"]]],[11,"ge",E,E,40,[[["self"],[R[110]]],["bool"]]],[11,"next",R[91],E,52,[[["self"]],[R[61],[R[56]]]]],[11,"size_hint",E,E,52,N],[11,"eq",R[79],E,0,[[["self"],[R[59]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[59]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[72]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[72]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[54]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[54]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[70]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[70]]],["bool"]]],[11,"eq",R[88],E,13,[[["self"],[R[111]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[111]]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[112]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[112]]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[113]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[113]]],["bool"]]],[11,"eq",E,E,15,[[["self"],["key"]],["bool"]]],[11,"ne",E,E,15,[[["self"],["key"]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[105]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[105]]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[107]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[107]]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[108]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[108]]],["bool"]]],[11,"eq",E,E,20,[[["self"],[R[114]]],["bool"]]],[11,"eq",E,E,21,[[["self"],[R[115]]],["bool"]]],[11,"eq",E,E,22,[[["self"],["editkey"]],["bool"]]],[11,"eq",E,E,23,[[["self"],[R[116]]],["bool"]]],[11,"eq",E,E,24,[[["self"],[R[117]]],["bool"]]],[11,"eq",E,E,25,[[["self"],[R[129]]],["bool"]]],[11,"eq",E,E,26,[[["self"],[R[118]]],["bool"]]],[11,"eq",E,E,30,[[["self"],[R[49]]],["bool"]]],[11,"ne",E,E,30,[[["self"],[R[49]]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[119]]],["bool"]]],[11,"eq",E,E,28,[[["self"],[R[120]]],["bool"]]],[11,"eq",R[5],E,5,[[["self"],["event"]],["bool"]]],[11,"ne",E,E,5,[[["self"],["event"]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[121]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[121]]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[122]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[122]]],["bool"]]],[11,"eq",E,E,31,[[["self"],[R[109]]],["bool"]]],[11,"ne",E,E,31,[[["self"],[R[109]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[123]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[123]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[130]]],["bool"]]],[11,"eq",E,E,4,[[["self"],["touch"]],["bool"]]],[11,"ne",E,E,4,[[["self"],["touch"]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[131]]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[124]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[124]]],["bool"]]],[11,"eq",E,E,12,[[["self"],[R[125]]],["bool"]]],[11,"ne",E,E,12,[[["self"],[R[125]]],["bool"]]],[11,"eq",R[89],E,32,[[["self"],[R[126]]],["bool"]]],[11,"ne",E,E,32,[[["self"],[R[126]]],["bool"]]],[11,"eq",E,E,50,[[["self"],[R[127]]],["bool"]]],[11,"eq",R[52],E,37,[[["self"],["badicon"]],["bool"]]],[11,"ne",E,E,37,[[["self"],["badicon"]],["bool"]]],[11,"eq",E,E,51,[[["self"],["icon"]],["bool"]]],[11,"ne",E,E,51,[[["self"],["icon"]],["bool"]]],[11,"eq",E,E,40,[[["self"],[R[110]]],["bool"]]],[11,"ne",E,E,40,[[["self"],[R[110]]],["bool"]]],[11,"eq",E,E,39,[[["self"],[R[128]]],["bool"]]],[11,"default",R[89],E,32,[[],[R[126]]]],[11,"default",R[52],E,36,[[],[R[133]]]],[11,"default",E,E,39,[[],["self"]]],[11,"from",R[79],E,0,N],[11,"from",E,E,0,N],[11,"from",E,E,1,N],[11,"from",E,E,1,N],[11,"from",E,E,2,N],[11,"from",E,E,2,N],[11,"from",E,E,3,N],[11,"from",E,E,3,N],[11,"clone",E,E,0,[[["self"]],[R[59]]]],[11,"clone",E,E,1,[[["self"]],[R[72]]]],[11,"clone",E,E,2,[[["self"]],[R[54]]]],[11,"clone",E,E,3,[[["self"]],[R[70]]]],[11,"clone",R[88],E,13,[[["self"]],[R[111]]]],[11,"clone",E,E,16,[[["self"]],[R[112]]]],[11,"clone",E,E,14,[[["self"]],[R[113]]]],[11,"clone",E,E,15,[[["self"]],["key"]]],[11,"clone",E,E,17,[[["self"]],[R[105]]]],[11,"clone",E,E,18,[[["self"]],[R[107]]]],[11,"clone",E,E,19,[[["self"]],[R[108]]]],[11,"clone",E,E,20,[[["self"]],[R[114]]]],[11,"clone",E,E,21,[[["self"]],[R[115]]]],[11,"clone",E,E,22,[[["self"]],["editkey"]]],[11,"clone",E,E,23,[[["self"]],[R[116]]]],[11,"clone",E,E,24,[[["self"]],[R[117]]]],[11,"clone",E,E,25,[[["self"]],[R[129]]]],[11,"clone",E,E,26,[[["self"]],[R[118]]]],[11,"clone",E,E,30,[[["self"]],[R[49]]]],[11,"clone",E,E,27,[[["self"]],[R[119]]]],[11,"clone",E,E,28,[[["self"]],[R[120]]]],[11,"clone",R[5],E,5,[[["self"]],["event"]]],[11,"clone",E,E,6,[[["self"]],[R[121]]]],[11,"clone",E,E,7,[[["self"]],[R[122]]]],[11,"clone",E,E,31,[[["self"]],[R[109]]]],[11,"clone",E,E,8,[[["self"]],[R[123]]]],[11,"clone",E,E,9,[[["self"]],[R[130]]]],[11,"clone",E,E,4,[[["self"]],["touch"]]],[11,"clone",E,E,10,[[["self"]],[R[131]]]],[11,"clone",E,E,11,[[["self"]],[R[124]]]],[11,"clone",E,E,12,[[["self"]],[R[125]]]],[11,"clone",R[89],E,32,[[["self"]],[R[126]]]],[11,"clone",E,E,34,[[["self"]],[R[132]]]],[11,"clone",E,E,50,[[["self"]],[R[127]]]],[11,"clone",R[52],E,37,[[["self"]],["badicon"]]],[11,"clone",E,E,51,[[["self"]],["icon"]]],[11,"clone",E,E,40,[[["self"]],[R[110]]]],[11,"clone",E,E,35,[[["self"]],[R[55]]]],[11,"clone",E,E,36,[[["self"]],[R[133]]]],[11,"clone",E,E,38,[[["self"]],[R[58]]]],[11,"clone",E,E,39,[[["self"]],[R[128]]]],[11,"clone",R[91],E,42,[[["self"]],[R[56]]]],[11,"cmp",R[88],E,15,[[["self"],["key"]],[R[106]]]],[11,"cmp",E,E,17,[[["self"],[R[105]]],[R[106]]]],[11,"cmp",E,E,18,[[["self"],[R[107]]],[R[106]]]],[11,"cmp",E,E,19,[[["self"],[R[108]]],[R[106]]]],[11,"cmp",E,E,20,[[["self"],[R[114]]],[R[106]]]],[11,"cmp",E,E,21,[[["self"],[R[115]]],[R[106]]]],[11,"cmp",E,E,22,[[["self"],["editkey"]],[R[106]]]],[11,"cmp",E,E,23,[[["self"],[R[116]]],[R[106]]]],[11,"cmp",E,E,24,[[["self"],[R[117]]],[R[106]]]],[11,"cmp",E,E,25,[[["self"],[R[129]]],[R[106]]]],[11,"cmp",E,E,26,[[["self"],[R[118]]],[R[106]]]],[11,"cmp",E,E,30,[[["self"],[R[49]]],[R[106]]]],[11,"cmp",E,E,27,[[["self"],[R[119]]],[R[106]]]],[11,"cmp",E,E,28,[[["self"],[R[120]]],[R[106]]]],[11,"cmp",R[5],E,31,[[["self"],[R[109]]],[R[106]]]],[11,"cmp",R[52],E,40,[[["self"],[R[110]]],[R[106]]]],[11,"deref",R[89],E,33,[[["self"]],[R[57]]]],[11,"fmt",E,E,50,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",R[52],E,37,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,38,[[["self"],[R[134]]],[R[62],["error"]]]],[11,"fmt",R[79],E,0,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,1,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,2,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,3,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",R[88],E,13,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,16,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,14,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,15,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,17,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,18,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,19,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,20,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,21,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,22,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,23,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,24,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,25,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,26,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,30,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,27,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,28,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",R[5],E,5,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,6,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,7,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,31,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,8,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,9,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,4,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,10,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,11,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,12,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",R[89],E,33,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,49,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,32,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,34,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,50,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",R[52],E,37,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,51,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,41,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,40,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,35,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,36,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,38,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,39,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",R[91],E,52,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,42,[[["self"],[R[134]]],[R[62]]]],[11,"sub",R[88],"Returns the set difference of the two sets of flags.",30,[[["self"],[R[49]]],[R[49]]]],[11,"sub_assign",E,"Disables all flags enabled in the set.",30,[[["self"],[R[49]]]]],[11,"not",E,"Returns the complement of this set of flags.",30,[[["self"]],[R[49]]]],[11,"bitand",E,"Returns the intersection between the two sets of flags.",30,[[["self"],[R[49]]],[R[49]]]],[11,"bitor",E,"Returns the union of the two sets of flags.",30,[[["self"],[R[49]]],[R[49]]]],[11,"bitxor",E,"Returns the left flags, but with all the right flags…",30,[[["self"],[R[49]]],[R[49]]]],[11,"bitand_assign",E,"Disables all flags disabled in the set.",30,[[["self"],[R[49]]]]],[11,"bitor_assign",E,"Adds the set of flags.",30,[[["self"],[R[49]]]]],[11,"bitxor_assign",E,"Toggles the set of flags.",30,[[["self"],[R[49]]]]],[11,"hash",E,E,13,N],[11,"hash",E,E,16,N],[11,"hash",E,E,14,N],[11,"hash",E,E,15,N],[11,"hash",E,E,17,N],[11,"hash",E,E,18,N],[11,"hash",E,E,19,N],[11,"hash",E,E,20,N],[11,"hash",E,E,21,N],[11,"hash",E,E,22,N],[11,"hash",E,E,23,N],[11,"hash",E,E,24,N],[11,"hash",E,E,25,N],[11,"hash",E,E,26,N],[11,"hash",E,E,30,N],[11,"hash",E,E,27,N],[11,"hash",E,E,28,N],[11,"hash",R[5],E,6,N],[11,"hash",E,E,31,N],[11,"hash",E,E,9,N],[11,"hash",E,E,10,N],[11,"hash",E,E,11,N],[11,"hash",R[89],E,32,N],[11,"hash",E,E,50,N],[11,"hash",R[52],E,40,N],[11,"hash",E,E,39,N],[11,"from_iter",R[88],E,30,[[[T]],[R[49]]]],[11,"fmt",E,E,30,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,30,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,30,[[["self"],[R[134]]],[R[62]]]],[11,"fmt",E,E,30,[[["self"],[R[134]]],[R[62]]]],[11,R[135],R[89],E,50,[[["self"]],["str"]]],[11,R[135],R[52],E,37,[[["self"]],["str"]]],[11,"cause",E,E,37,[[["self"]],[R[61],["error"]]]],[11,R[135],E,E,38,[[["self"]],["str"]]],[11,"from_rgba",E,"Creates an `Icon` from 32bpp RGBA data.",51,[[["vec",["u8"]],["u32"],["u32"]],[R[62],["badicon"]]]]],"p":[[3,R[136]],[3,R[137]],[3,R[138]],[3,R[139]],[3,"Touch"],[4,"Event"],[4,R[140]],[4,R[10]],[4,R[13]],[4,R[141]],[4,R[142]],[4,R[143]],[4,R[144]],[3,R[145]],[3,R[146]],[3,"Key"],[4,R[147]],[4,"KeyState"],[4,R[148]],[4,R[149]],[4,R[150]],[4,R[151]],[4,"EditKey"],[4,R[152]],[4,R[153]],[4,"MediaKey"],[4,R[154]],[4,R[155]],[4,R[156]],[8,"KeyLabel"],[3,R[157]],[3,"DeviceId"],[4,R[158]],[3,R[159]],[3,R[160]],[3,R[161]],[3,R[162]],[4,"BadIcon"],[4,R[163]],[4,R[164]],[3,"WindowId"],[3,"Window"],[3,R[165]],[8,R[166]],[8,R[167]],[8,R[168]],[8,R[169]],[8,R[170]],[8,R[171]],[3,R[172]],[3,R[173]],[3,"Icon"],[3,R[174]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);